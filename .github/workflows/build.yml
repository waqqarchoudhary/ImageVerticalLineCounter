name: Build and Release Java App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Define semantic version
        id: version
        run: |
          MAJOR=1
          MINOR=0
          PATCH=${{ github.run_number }}
          echo "VERSION=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_ENV
          echo "VERSION=${MAJOR}.${MINOR}.${PATCH}"

      - name: Compile Java source files
        run: |
          mkdir -p bin
          javac -d bin src/com/tmmc/assignment/**/*.java

      - name: List compiled class files
        run: find bin -name "*.class"

      - name: Package JAR
        run: |
          mkdir -p dist
          JAR_NAME="ImageVerticalLineCounter-${VERSION}.jar"
          jar --create --file dist/${JAR_NAME} \
              --main-class com.tmmc.assignment.AppMain -C bin .
          echo "JAR_NAME=${JAR_NAME}" >> $GITHUB_ENV

      - name: List JAR file
        run: ls -lh dist/*.jar

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JAR_NAME }}
          path: dist/${{ env.JAR_NAME }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.VERSION }}
          name: "Release v${{ env.VERSION }}"
          body: |
            Automated release generated by GitHub Actions.
            Version: v${{ env.VERSION }}
            Commit: ${{ github.sha }}
          files: dist/${{ env.JAR_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
